# Generated by Django 4.2.7 on 2025-07-19 15:04

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("leases", "0003_alter_landlord_table"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("accounting", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("lease", "Lease Agreement"),
                            ("service", "Service Agreement"),
                            ("nda", "Non-Disclosure Agreement"),
                            ("employment", "Employment Contract"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("reference_number", models.CharField(max_length=50, unique=True)),
                ("content", models.TextField()),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("terminated", "Terminated"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "party_a_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "party_b_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "party_a_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="party_a_contracts",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "party_b_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="party_b_contracts",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The user who last created or modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "contract",
                "verbose_name_plural": "contracts",
                "db_table": "contract",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.CreateModel(
            name="LegalDispute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "dispute_type",
                    models.CharField(
                        choices=[
                            ("tenant", "Tenant Dispute"),
                            ("contract", "Contract Dispute"),
                            ("property", "Property Dispute"),
                            ("payment", "Payment Dispute"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("investigation", "Under Investigation"),
                            ("negotiation", "In Negotiation"),
                            ("litigation", "In Litigation"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("opened_date", models.DateField(auto_now_add=True)),
                ("closed_date", models.DateField(blank=True, null=True)),
                (
                    "contract",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="legal.contract",
                    ),
                ),
                (
                    "lease",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="leases.lease",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The user who last created or modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "legal dispute",
                "verbose_name_plural": "legal disputes",
                "db_table": "legal_dispute",
                "ordering": ["-opened_date"],
            },
        ),
        migrations.CreateModel(
            name="ContractAmendment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("amendment_date", models.DateField()),
                ("description", models.TextField()),
                ("changes", models.TextField()),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amendments",
                        to="legal.contract",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The user who last created or modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "contract amendment",
                "verbose_name_plural": "contract amendments",
                "db_table": "contract_amendment",
                "ordering": ["-amendment_date"],
            },
        ),
        migrations.CreateModel(
            name="Claim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "creditor_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the creditor entity."
                    ),
                ),
                (
                    "debtor_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the debtor entity."
                    ),
                ),
                (
                    "data_source",
                    models.CharField(
                        blank=True,
                        help_text="Source of the claim data (e.g., 'Lease System', 'Manual Input').",
                        max_length=255,
                        null=True,
                        verbose_name="Data Source",
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="Account number related to the claim.",
                        max_length=255,
                        null=True,
                        verbose_name="Account Number",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Amount"
                    ),
                ),
                (
                    "claim_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Claim Date"
                    ),
                ),
                (
                    "creditor_content_type",
                    models.ForeignKey(
                        help_text="The type of entity that is the creditor.",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "individuals"), ("model", "individual")
                            ),
                            models.Q(
                                ("app_label", "companies"), ("model", "companybranch")
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claims_as_creditor",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="The currency of the claim amount.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="claims",
                        to="accounting.currency",
                    ),
                ),
                (
                    "debtor_content_type",
                    models.ForeignKey(
                        help_text="The type of entity that is the debtor.",
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "individuals"), ("model", "individual")
                            ),
                            models.Q(
                                ("app_label", "companies"), ("model", "companybranch")
                            ),
                            _connector="OR",
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="claims_as_debtor",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The user who last created or modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Claim",
                "verbose_name_plural": "Claims",
                "db_table": "claim",
                "ordering": ["-claim_date"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ActiveCredit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "date_time",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time of the transaction/entry.",
                        verbose_name="Transaction Date/Time",
                    ),
                ),
                ("dr_object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("cr_object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "due_date",
                    models.DateField(blank=True, null=True, verbose_name="Due Date"),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, null=True, verbose_name="Start Date"),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End Date"),
                ),
                (
                    "details",
                    models.TextField(blank=True, null=True, verbose_name="Details"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Amount"
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Remaining balance after this transaction (if applicable).",
                        max_digits=12,
                        null=True,
                        verbose_name="Balance",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PAID", "Paid"),
                            ("OUTSTANDING", "Outstanding"),
                            ("OVERDUE", "Overdue"),
                            ("PARTIALLY_PAID", "Partially Paid"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="OUTSTANDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Payment Date"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("RENTAL", "Rental Payment"),
                            ("LOAN", "Loan"),
                            ("DEPOSIT", "Deposit"),
                            ("CHARGE", "Charge/Fee"),
                            ("DISBURSEMENT", "Disbursement"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                        verbose_name="Transaction Type",
                    ),
                ),
                (
                    "cr_content_type",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "individuals"), ("model", "individual")
                            ),
                            models.Q(
                                ("app_label", "companies"), ("model", "companybranch")
                            ),
                            _connector="OR",
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="credit_entries",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "dr_content_type",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to=models.Q(
                            models.Q(
                                ("app_label", "individuals"), ("model", "individual")
                            ),
                            models.Q(
                                ("app_label", "companies"), ("model", "companybranch")
                            ),
                            _connector="OR",
                        ),
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="debit_entries",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="The user who last created or modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Financial Entry",
                "verbose_name_plural": "Financial Entries",
                "db_table": "active_credit",
                "ordering": ["-date_time"],
                "abstract": False,
            },
        ),
    ]
