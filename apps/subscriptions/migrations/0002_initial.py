# Generated by Django 4.2.7 on 2025-07-09 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("subscriptions", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("accounting", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="subscriptionperiod",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="The user who last created or modified this record.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="content_type",
            field=models.ForeignKey(
                help_text="The type of entity subscribing (Individual or Company).",
                limit_choices_to=models.Q(
                    models.Q(("app_label", "individuals"), ("model", "individual")),
                    models.Q(("app_label", "companies"), ("model", "companybranch")),
                    _connector="OR",
                ),
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="currency",
            field=models.ForeignKey(
                help_text="The currency in which this subscription is paid.",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="subscriptions_currency",
                to="accounting.currency",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="payment_method",
            field=models.ForeignKey(
                help_text="The primary method of payment for this subscription.",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="subscriptions_payment_method",
                to="accounting.paymentmethod",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="period",
            field=models.ForeignKey(
                help_text="The billing period for this subscription (e.g., Monthly, Annually).",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="subscriptions",
                to="subscriptions.subscriptionperiod",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="service",
            field=models.ForeignKey(
                help_text="The service provided by this subscription (e.g., RentSafe).",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="subscriptions",
                to="subscriptions.services",
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="The user who last created or modified this record.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="services",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="The user who last created or modified this record.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="subscription",
            constraint=models.CheckConstraint(
                check=models.Q(("used_slots__lte", models.F("total_slots"))),
                name="used_lte_total_slots",
            ),
        ),
    ]
