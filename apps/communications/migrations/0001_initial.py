# Generated by Django 4.2.7 on 2025-07-22 15:05

import apps.communications.models.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommsHistMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "client_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the client entity (Individual or Company) this message is to/from."
                    ),
                ),
                ("message", models.TextField(verbose_name="Message Content")),
                (
                    "origin",
                    models.CharField(
                        choices=[
                            ("tenant_comms_history", "Tenant Comms History"),
                            ("creditor_comms_history", "Creditor Comms History"),
                        ],
                        default="tenant_comms_history",
                        max_length=130,
                    ),
                ),
                (
                    "channel_path",
                    models.CharField(
                        choices=[
                            ("is_sms", "SMS"),
                            ("is_email", "Email"),
                            ("note", "Note"),
                        ],
                        default="is_sms",
                        help_text="The channel path for the reminder.",
                        max_length=50,
                        verbose_name="Channel Path",
                    ),
                ),
            ],
            options={
                "verbose_name": "Communication Message",
                "verbose_name_plural": "Communication Messages",
                "db_table": "comms_hist_message",
                "ordering": ["-date_created"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Communication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("phone", "Phone Call"),
                            ("letter", "Letter"),
                            ("meeting", "In-Person Meeting"),
                            ("whatsapp", "WhatsApp"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        max_length=10,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.TextField()),
                ("sent_to", models.CharField(blank=True, max_length=255, null=True)),
                ("is_read", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "communication",
                "verbose_name_plural": "communications",
                "db_table": "communication",
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="CommunicationAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("file", models.FileField(upload_to="communication_attachments/")),
                ("file_name", models.CharField(max_length=255)),
                ("file_type", models.CharField(max_length=50)),
            ],
            options={
                "verbose_name": "communication attachment",
                "verbose_name_plural": "communication attachments",
                "db_table": "communication_attachment",
            },
        ),
        migrations.CreateModel(
            name="CommunicationHistoryReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "client_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the client entity (Individual or Company) this reminder is about."
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="The content of the reminder message.",
                        verbose_name="Message",
                    ),
                ),
                (
                    "channel_path",
                    models.CharField(
                        choices=[
                            ("is_sms", "SMS"),
                            ("is_email", "Email"),
                            ("note", "Note"),
                        ],
                        default="is_sms",
                        help_text="The channel path for the reminder.",
                        max_length=255,
                        verbose_name="Channel Path",
                    ),
                ),
                (
                    "action_date",
                    models.DateField(
                        default=None,
                        help_text="The date the reminder action is scheduled for.",
                        null=True,
                        verbose_name="Action Date",
                    ),
                ),
                (
                    "message_sent",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the reminder message has been sent.",
                        verbose_name="Message Sent",
                    ),
                ),
                (
                    "origin",
                    models.CharField(
                        choices=[
                            ("tenant_comms_history", "Tenant"),
                            ("creditor_comms_history", "Creditor Comms History"),
                        ],
                        default="tenant_comms_history",
                        max_length=130,
                    ),
                ),
            ],
            options={
                "verbose_name": "Communication History Reminder",
                "verbose_name_plural": "Communication History Reminders",
                "db_table": "comms_hist_reminder",
                "ordering": ["-date_created", "action_date"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DebtorIntelligenceNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "client_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the client entity (Individual or Company) this note is about."
                    ),
                ),
            ],
            options={
                "verbose_name": "Debtor Intelligence Note",
                "verbose_name_plural": "Debtor Intelligence Notes",
                "db_table": "debtor_intelligence_note",
                "ordering": ["-date_created"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("otp_code", models.CharField(max_length=6, verbose_name="OTP Code")),
                (
                    "otp_type",
                    models.CharField(
                        choices=[
                            ("VERIFICATION", "Account Verification"),
                            ("PASSWORD_RESET", "Password Reset"),
                            ("LOGIN", "Login"),
                            ("TRANSACTION", "Transaction Confirmation"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                        verbose_name="OTP Type",
                    ),
                ),
                (
                    "requested_entity_object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the entity (Individual or Company) for whom the OTP is requested."
                    ),
                ),
                (
                    "requested_user_type",
                    models.CharField(
                        choices=[("INDIVIDUAL", "Individual"), ("COMPANY", "Company")],
                        default="INDIVIDUAL",
                        max_length=100,
                        verbose_name="Requested User Type",
                    ),
                ),
                (
                    "expire_at",
                    models.DateTimeField(
                        default=apps.communications.models.models.get_default_otp_expire_time,
                        verbose_name="Expiry Time",
                    ),
                ),
                ("is_used", models.BooleanField(default=False, verbose_name="Is Used")),
            ],
            options={
                "verbose_name": "OTP",
                "verbose_name_plural": "OTPs",
                "db_table": "otp",
                "ordering": ["-date_created"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Reminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("payment", "Payment Reminder"),
                            ("inspection", "Inspection Reminder"),
                            ("renewal", "Lease Renewal Reminder"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("due_date", models.DateTimeField()),
                ("message", models.TextField()),
                ("is_completed", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "reminder",
                "verbose_name_plural": "reminders",
                "db_table": "reminder",
                "ordering": ["due_date"],
            },
        ),
    ]
