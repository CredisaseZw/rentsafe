# Generated by Django 4.2.7 on 2025-07-22 15:05

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Guarantor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "guarantee_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="The maximum amount guaranteed by this guarantor, if specified.",
                        max_digits=12,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "guarantor",
                "verbose_name_plural": "guarantors",
                "db_table": "guarantor",
            },
        ),
        migrations.CreateModel(
            name="Landlord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Landlord",
                "verbose_name_plural": "Landlords",
                "db_table": "landlord",
                "ordering": ["-date_created"],
            },
        ),
        migrations.CreateModel(
            name="Lease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "lease_id",
                    models.CharField(
                        help_text="Unique identifier for the lease (e.g., LSE-001).",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        help_text="The date when the lease officially starts.",
                        null=True,
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="The date when the lease is scheduled to end. Can be null for open-ended leases.",
                        null=True,
                    ),
                ),
                (
                    "signed_date",
                    models.DateField(
                        blank=True,
                        help_text="The actual date the lease agreement was signed.",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING_APPROVAL", "Pending Approval"),
                            ("ACTIVE", "Active"),
                            ("TERMINATED", "Terminated"),
                            ("EXPIRED", "Expired"),
                            ("RENEWED", "Renewed"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="DRAFT",
                        help_text="Current operational status of the lease.",
                        max_length=20,
                    ),
                ),
                (
                    "deposit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="The total security/rental deposit amount for the lease.",
                        max_digits=12,
                    ),
                ),
                (
                    "deposit_period",
                    models.IntegerField(
                        default=0,
                        help_text="e.g., number of months rent equivalent for the deposit.",
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("ANNUALLY", "Annually"),
                        ],
                        default="MONTHLY",
                        help_text="The default payment frequency for recurring charges.",
                        max_length=20,
                    ),
                ),
                (
                    "due_day_of_month",
                    models.SmallIntegerField(
                        default=25,
                        help_text="The day of the month when recurring charges are typically due (1-31).",
                    ),
                ),
                (
                    "grace_period_days",
                    models.SmallIntegerField(
                        default=7,
                        help_text="Number of days after the due date before a payment is considered late.",
                    ),
                ),
                (
                    "includes_utilities",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if basic utilities are included in the overall rent.",
                    ),
                ),
                (
                    "utilities_details",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of utilities included or managed separately.",
                        null=True,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        blank=True,
                        help_text="Optional bank account number or reference for tenant payments.",
                        max_length=50,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "lease",
                "verbose_name_plural": "leases",
                "ordering": ["-start_date", "lease_id"],
            },
        ),
        migrations.CreateModel(
            name="LeaseCharge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "charge_type",
                    models.CharField(
                        choices=[
                            ("RENT", "Rent"),
                            ("UTILITY", "Utility"),
                            ("SERVICE_FEE", "Service Fee"),
                            ("LATE_FEE", "Late Fee"),
                            ("DEPOSIT", "Deposit"),
                            ("DISCOUNT", "Discount"),
                            ("OTHER", "Other"),
                        ],
                        default="RENT",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A brief description of the charge (e.g., 'Monthly Rent - Jan 2024', 'Water Bill').",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="The monetary amount of the charge. Use negative for discounts.",
                        max_digits=12,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("ONE_TIME", "One-time"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("ANNUALLY", "Annually"),
                        ],
                        default="MONTHLY",
                        help_text="How often this charge recurs.",
                        max_length=20,
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        help_text="The date from which this charge becomes effective."
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="The date this charge stops being applied (e.g., for rent increases/discounts).",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if this charge is currently active and should be applied.",
                    ),
                ),
            ],
            options={
                "verbose_name": "lease charge",
                "verbose_name_plural": "lease charges",
                "db_table": "lease_charge",
                "ordering": ["lease", "effective_date", "charge_type"],
            },
        ),
        migrations.CreateModel(
            name="LeaseLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("LEASE_CREATED", "Lease Created"),
                            ("LEASE_UPDATED", "Lease Updated"),
                            ("TENANT_ADDED", "Tenant Added"),
                            ("TENANT_REMOVED", "Tenant Removed"),
                            ("PRIMARY_TENANT_CHANGED", "Primary Tenant Changed"),
                            ("LEASE_STATUS_CHANGED", "Lease Status Changed"),
                            ("LEASE_TERMINATED", "Lease Terminated"),
                            ("LEASE_RENEWED", "Lease Renewed"),
                            ("CHARGE_ADDED", "Charge Added"),
                            ("CHARGE_UPDATED", "Charge Updated"),
                            ("CHARGE_REMOVED", "Charge Removed"),
                            ("DEPOSIT_UPDATED", "Deposit Updated"),
                            ("OTHER", "Other"),
                        ],
                        help_text="The type of event being logged.",
                        max_length=50,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The date and time the event occurred.",
                    ),
                ),
                (
                    "details",
                    models.JSONField(
                        blank=True,
                        help_text="JSON field to store detailed changes or relevant data, including core lease identifiers.",
                        null=True,
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(
                        blank=True, help_text="The ID of the related object.", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "lease log",
                "verbose_name_plural": "lease logs",
                "db_table": "lease_log",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="LeaseTenant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "is_primary_tenant",
                    models.BooleanField(
                        default=False,
                        help_text="Designates this tenant as the primary contact for the lease.",
                    ),
                ),
            ],
            options={
                "verbose_name": "lease tenant",
                "verbose_name_plural": "lease tenants",
                "db_table": "lease_tenant",
            },
        ),
        migrations.CreateModel(
            name="LeaseTermination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_created", models.DateTimeField(auto_now_add=True, null=True)),
                ("date_updated", models.DateTimeField(auto_now=True, null=True)),
                ("termination_date", models.DateField()),
                (
                    "reason",
                    models.TextField(
                        help_text="Detailed reason for the lease termination."
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes related to the termination.",
                        null=True,
                    ),
                ),
                (
                    "lease",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="termination",
                        to="leases.lease",
                    ),
                ),
            ],
            options={
                "verbose_name": "lease termination",
                "verbose_name_plural": "lease terminations",
                "db_table": "lease_termination",
            },
        ),
    ]
