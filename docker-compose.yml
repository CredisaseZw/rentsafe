# version: '3.8' 

services:
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    command: >
      /bin/bash -c "
      python manage.py collectstatic --noinput &&
      python manage.py migrate --noinput &&
      gunicorn core.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build: .
    command: celery -A core worker -l info --concurrency=1
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_healthy

  celery_beat:
    build: .
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_healthy

volumes:
  postgres_data: 
  static_volume:
  media_volume:

